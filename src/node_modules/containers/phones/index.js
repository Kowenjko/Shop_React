import React, { Component } from 'react'
import { connect } from 'react-redux'
import * as R from 'ramda'
import { fetchPhones, addPhoneToBacket, fetchCategories, fetchCategoriesType } from 'actions'
import { getPhones } from 'selectors'

import Layout from 'containers/layout'
import { Link } from 'react-router-dom'
class Phones extends Component {
  componentDidMount() {
    this.props.fetchPhones(this.props.categoryProg)
    this.props.fetchCategories(this.props.categoryProg)
    this.props.fetchCategoriesType()
  }

  renderPhone(phone, index) {
    const shortDescription = `${R.take(60, phone.description)}`
    const { addPhoneToBacket, categoryProg } = this.props
    return (
      <div className='col-sm-4 col-lg -4 col-md-4 book-list' key={index}>
        <div className='thumbnail'>
          <img className='img-thunmnail'
            src={phone.image}
            alt={phone.name} />
          <div className='captian'>
            <h4 className='pull-right'>${phone.price}</h4>
            <h4 >
              <Link to={`/${categoryProg}/${phone.id}`}>
                {phone.name}
              </Link>
            </h4>
            <p>{shortDescription}</p>
            <p className='itemButton'>
              <button className='btn btn-primary' onClick={() => addPhoneToBacket(phone.id)}>Buy now!</button>
              <Link to={`/${categoryProg}/${phone.id}`} className='btn btn-default'>
                More info
              </Link>
            </p>
          </div>
        </div>
      </div>
    )
  }
  render() {
    const { phones } = this.props
    return (

      <Layout>
        <div className='books row'>
          {phones.map((phone, index) => this.renderPhone(phone, index))}
        </div>
      </Layout>
    )
  }
}
const mapStateToProps = (state, ownProps) => {
  return {
    phones: getPhones(state, ownProps),    
    categoryProg: state.categoryPage.name
  }
}
const mapDispatchToProps = {
  fetchPhones,
  addPhoneToBacket,
  fetchCategories,
  fetchCategoriesType
}

export default connect(mapStateToProps, mapDispatchToProps)(Phones)
